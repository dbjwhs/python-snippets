[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "strategy_pattern"
version = "0.1.0"
description = "Strategy Design Pattern Implementation"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "dbjwhs", email = "noreply@example.com"}
]
dependencies = [
    "icecream>=2.1.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "ruff>=0.2.0",
    "mypy>=1.8.0",
]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.pytest]
testpaths = ["src/strategy_pattern/tests"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = ["icecream.*"]
ignore_missing_imports = true

[tool.ruff]
line-length = 100
target-version = "py312"
src = ["src"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "UP", # pyupgrade
    "N",  # pep8-naming
    "ANN", # flake8-annotations
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "PT", # flake8-pytest-style
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "ERA", # eradicate
    "PL",  # pylint
]

[tool.ruff.lint.isort]
known-first-party = ["strategy_pattern"]